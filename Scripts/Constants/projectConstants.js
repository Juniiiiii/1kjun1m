let projectCoordinates = [
    [0, 0],
    [0, 1],
    [0, 2],
    [0, 3],
    [0, 4],
    [1, 0],
    [1, 5],
    [2, 0],
    [2, 5],
    [2, 18],
    [2, 32],
    [3, 0],
    [3, 5],
    [3, 32],
    [4, 0],
    [4, 1],
    [4, 2],
    [4, 3],
    [4, 4],
    [4, 7],
    [4, 9],
    [4, 10],
    [4, 13],
    [4, 14],
    [4, 15],
    [4, 18],
    [4, 21],
    [4, 22],
    [4, 23],
    [4, 27],
    [4, 28],
    [4, 29],
    [4, 32],
    [4, 33],
    [4, 36],
    [4, 37],
    [4, 38],
    [5, 0],
    [5, 7],
    [5, 8],
    [5, 12],
    [5, 16],
    [5, 18],
    [5, 20],
    [5, 24],
    [5, 26],
    [5, 30],
    [5, 32],
    [5, 35],
    [5, 39],
    [6, 0],
    [6, 7],
    [6, 12],
    [6, 16],
    [6, 18],
    [6, 20],
    [6, 21],
    [6, 22],
    [6, 23],
    [6, 24],
    [6, 26],
    [6, 32],
    [6, 36],
    [6, 37],
    [7, 0],
    [7, 7],
    [7, 12],
    [7, 16],
    [7, 18],
    [7, 20],
    [7, 26],
    [7, 32],
    [7, 37],
    [7, 38],
    [8, 0],
    [8, 7],
    [8, 12],
    [8, 16],
    [8, 18],
    [8, 20],
    [8, 24],
    [8, 26],
    [8, 30],
    [8, 32],
    [8, 35],
    [8, 39],
    [9, 0],
    [9, 7],
    [9, 13],
    [9, 14],
    [9, 15],
    [9, 18],
    [9, 21],
    [9, 22],
    [9, 23],
    [9, 27],
    [9, 28],
    [9, 29],
    [9, 33],
    [9, 36],
    [9, 37],
    [9, 38],
    [10, 18],
    [11, 17],
];

let ourVoiceCoordinates = [
    [0, 1],
    [0, 2],
    [0, 3],
    [0, 4],
    [0, 17],
    [0, 23],
    [1, 0],
    [1, 5],
    [1, 17],
    [1, 23],
    [2, 0],
    [2, 5],
    [2, 18],
    [2, 22],
    [2, 30],
    [3, 0],
    [3, 5],
    [3, 18],
    [3, 22],
    [4, 0],
    [4, 5],
    [4, 7],
    [4, 11],
    [4, 13],
    [4, 15],
    [4, 16],
    [4, 18],
    [4, 22],
    [4, 25],
    [4, 26],
    [4, 27],
    [4, 30],
    [4, 33],
    [4, 34],
    [4, 35],
    [4, 39],
    [4, 40],
    [4, 41],
    [5, 0],
    [5, 5],
    [5, 7],
    [5, 11],
    [5, 13],
    [5, 14],
    [5, 19],
    [5, 21],
    [5, 24],
    [5, 28],
    [5, 30],
    [5, 32],
    [5, 36],
    [5, 38],
    [5, 42],
    [6, 0],
    [6, 5],
    [6, 7],
    [6, 11],
    [6, 13],
    [6, 19],
    [6, 21],
    [6, 24],
    [6, 28],
    [6, 30],
    [6, 32],
    [6, 38],
    [6, 39],
    [6, 40],
    [6, 41],
    [6, 42],
    [7, 0],
    [7, 5],
    [7, 7],
    [7, 11],
    [7, 13],
    [7, 19],
    [7, 21],
    [7, 24],
    [7, 28],
    [7, 30],
    [7, 32],
    [7, 38],
    [8, 0],
    [8, 5],
    [8, 7],
    [8, 10],
    [8, 11],
    [8, 13],
    [8, 20],
    [8, 24],
    [8, 28],
    [8, 30],
    [8, 32],
    [8, 36],
    [8, 38],
    [8, 42],
    [9, 1],
    [9, 2],
    [9, 3],
    [9, 4],
    [9, 8],
    [9, 9],
    [9, 11],
    [9, 13],
    [9, 20],
    [9, 25],
    [9, 26],
    [9, 27],
    [9, 30],
    [9, 33],
    [9, 34],
    [9, 35],
    [9, 39],
    [9, 40],
    [9, 41],
];

let insideTheMindOfCoordinates = [
    [0, 20],
    [0, 34],
    [1, 20],
    [1, 34],
    [2, 0],
    [2, 14],
    [2, 20],
    [2, 31],
    [2, 34],
    [3, 20],
    [3, 31],
    [3, 34],
    [4, 0],
    [4, 2],
    [4, 4],
    [4, 5],
    [4, 9],
    [4, 10],
    [4, 11],
    [4, 14],
    [4, 17],
    [4, 18],
    [4, 19],
    [4, 20],
    [4, 23],
    [4, 24],
    [4, 25],
    [4, 31],
    [4, 32],
    [4, 34],
    [4, 36],
    [4, 37],
    [4, 41],
    [4, 42],
    [4, 43],
    [5, 0],
    [5, 2],
    [5, 3],
    [5, 6],
    [5, 8],
    [5, 12],
    [5, 14],
    [5, 16],
    [5, 20],
    [5, 22],
    [5, 26],
    [5, 31],
    [5, 34],
    [5, 35],
    [5, 38],
    [5, 40],
    [5, 44],
    [6, 0],
    [6, 2],
    [6, 6],
    [6, 9],
    [6, 10],
    [6, 14],
    [6, 16],
    [6, 20],
    [6, 22],
    [6, 23],
    [6, 24],
    [6, 25],
    [6, 26],
    [6, 31],
    [6, 34],
    [6, 38],
    [6, 40],
    [6, 41],
    [6, 42],
    [6, 43],
    [6, 44],
    [7, 0],
    [7, 2],
    [7, 6],
    [7, 11],
    [7, 14],
    [7, 16],
    [7, 20],
    [7, 22],
    [7, 31],
    [7, 34],
    [7, 38],
    [7, 40],
    [8, 0],
    [8, 2],
    [8, 6],
    [8, 8],
    [8, 12],
    [8, 14],
    [8, 16],
    [8, 20],
    [8, 22],
    [8, 26],
    [8, 31],
    [8, 34],
    [8, 38],
    [8, 40],
    [8, 44],
    [9, 0],
    [9, 2],
    [9, 6],
    [9, 9],
    [9, 10],
    [9, 11],
    [9, 14],
    [9, 17],
    [9, 18],
    [9, 19],
    [9, 20],
    [9, 23],
    [9, 24],
    [9, 25],
    [9, 32],
    [9, 34],
    [9, 38],
    [9, 41],
    [9, 42],
    [9, 43],
    [12, 20],
    [12, 32],
    [13, 20],
    [13, 31],
    [14, 8],
    [14, 20],
    [14, 31],
    [15, 20],
    [15, 31],
    [16, 0],
    [16, 1],
    [16, 2],
    [16, 4],
    [16, 5],
    [16, 8],
    [16, 10],
    [16, 12],
    [16, 13],
    [16, 17],
    [16, 18],
    [16, 19],
    [16, 20],
    [16, 26],
    [16, 27],
    [16, 28],
    [16, 31],
    [16, 32],
    [17, 0],
    [17, 3],
    [17, 6],
    [17, 8],
    [17, 10],
    [17, 11],
    [17, 14],
    [17, 16],
    [17, 20],
    [17, 25],
    [17, 29],
    [17, 31],
    [18, 0],
    [18, 3],
    [18, 6],
    [18, 8],
    [18, 10],
    [18, 14],
    [18, 16],
    [18, 20],
    [18, 25],
    [18, 29],
    [18, 31],
    [19, 0],
    [19, 3],
    [19, 6],
    [19, 8],
    [19, 10],
    [19, 14],
    [19, 16],
    [19, 20],
    [19, 25],
    [19, 29],
    [19, 31],
    [20, 0],
    [20, 3],
    [20, 6],
    [20, 8],
    [20, 10],
    [20, 14],
    [20, 16],
    [20, 20],
    [20, 25],
    [20, 29],
    [20, 31],
    [21, 0],
    [21, 3],
    [21, 6],
    [21, 8],
    [21, 10],
    [21, 14],
    [21, 17],
    [21, 18],
    [21, 19],
    [21, 20],
    [21, 26],
    [21, 27],
    [21, 28],
    [21, 31]
    
];

const gridRows = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--project-rows'));
const gridCols = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--project-cols'));

function centraliseCoordinates(rows, cols, arr) {
    let { width, height } = boundingBoxOfPoints(arr);
    let rowOffset = Math.floor((rows - width) / 2);
    let colOffset = Math.floor((cols - height) / 2);
    return arr.map(point => [point[0] + rowOffset, point[1] + colOffset + 5]);
}

projectCoordinates = centraliseCoordinates(gridRows, gridCols, projectCoordinates);
ourVoiceCoordinates = centraliseCoordinates(gridRows, gridCols, ourVoiceCoordinates);
insideTheMindOfCoordinates = centraliseCoordinates(gridRows, gridCols, insideTheMindOfCoordinates);

const minimumPixelCount = Math.max(
    projectCoordinates.length, 
    ourVoiceCoordinates.length, 
    insideTheMindOfCoordinates.length
);
